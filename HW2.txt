ANSWERS TO HW2

1-SELECT orderid, orderdate, custid, empid

FROM Sales.Orders

WHERE orderdate >= '20150601' 

 AND orderdate < '20150606';


2-SELECT orderid, SUM(qty*unitprice) AS totalvalue

FROM Sales.OrderDetails

GROUP BY orderid

HAVING SUM(qty*unitprice) > 15000

ORDER BY totalvalue DESC;

3-SELECT TOP (3) shipcountry, AVG(freight) AS avgfreight

FROM Sales.Orders

WHERE orderdate >= '20150101' AND orderdate < '20160101'

GROUP BY shipcountry

ORDER BY avgfreight DESC;

4-SELECT empid, FirstName, lastname

FROM HR.Employees

WHERE empid NOT IN

 (SELECT O.empid

  FROM Sales.Orders AS O

  WHERE O.orderdate >= '20160501')

5-SELECT E.empid, E.firstname, E.lastname, N.n

FROM HR.Employees AS E

 CROSS JOIN dbo.Nums AS N 

WHERE N.n <= 5

ORDER BY n, empid;

6-IN is used to compare one value to several, and can use literal values.

The IN is best used where you have a static list to pass.

when we use the IN operator, the SQL engine will scan all records fetched from the inner query.


EXISTS will tell you whether a query returned any results.

when we use EXISTS operator, the SQL engine will stop the scanning process as soon as it found a match.

EXISTS is much faster than IN, when the sub-query results is very large.

IN is faster than EXISTS, when the sub-query results is very small.

The EXISTS keyword evaluates true or false, but IN keyword compare all value in the corresponding sub query column.

when looking for a value that doesn't appear in the set of known values NOT IN returns UNKNOWN (outer row is discarded), whereas NOT EXISTS returns TRUE (outer row returned).

7-SELECT *

INTO dbo.Orders

FROM Sales.Orders

WHERE orderdate >= '20140101'

AND orderdate < '20170101';

8-???????????????????????????????????????????????????????????????????????????????

9- SELECT DISTINCT C.custid, C.companyname,

CASE WHEN O.orderid IS NOT NULL THEN 'Yes' ELSE 'No' END AS HasOrderOn20160212

FROM Sales.Customers AS C

LEFT OUTER JOIN Sales.Orders AS O

ON O.custid = C.custid

AND O.orderdate = '20160212';

10- END!!!!!!!!!!!!!!!!!!!!!!




MIDTERM-

1- 2pt Y
2- 2pt Y
3- 2pt NS
4- 2pt Y
5- 2pt Y
6- 2pt Y
7- 2pt Y
8- 2pt Y
9- 2pt Y
10- 2pt Y
11- 2pt NS
12- 2pt Y 
13- 2pt Y
14- 2pt Y
15- 2pt Y
16- 2pt Y
17- 2pt Y
18- 2pt Y
19- 2pt Y
20- 2pt Y
21- 2pt Y
22- 2pt Y
23- 2pt Y
24- 2pt Y
25- 2pt Y
26- 2pt Y
27- 2pt Y
28- 2pt Y
29- 2pt Y
30- 2pt Y
31- 2pt Y
32- 2pt Y
33- 2pt Y
34- 2pt Y
35- 2pt Y
36- 2pt Y
37- 2pt NS
38- 2pt NS
39- 2pt NS
40- 2pt NS
41- 10pt NS
42- 10pt NS